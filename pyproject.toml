[tool.poetry]
name = "bugzilla2fedmsg"
version = "1.0.0"
description = "Consume Bugzilla messages over STOMP and republish to Fedora Messaging"

license = "LGPL-2.1-or-later"

authors = [
  "Ralph Bean <rbean@redhat.com>"
]

readme = "README.rst"
keywords = ["fedora"]
homepage = "https://github.com/fedora-infra/bugzilla2fedmsg"

include = [
    { path = "tox.ini", format = "sdist" },
    { path = "tests", format = "sdist" },
    { path = "*.example", format = "sdist" },
    { path = "*.rst", format = "sdist" },
]

classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.3"
fedora-messaging = "^3.5.0"
python-dateutil = "^2.9.0.post0"
stompest = "^2.3.0"
pyasn1 = "^0.6.0"
pytz = ">=2024.1"
bugzilla2fedmsg-schema = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
pytest-mock = ">=3.14.0"
black = ">=23.10.0"
ruff = ">=0.1.1"
coverage = {extras = ["toml"], version = ">=7.0.0"}
diff-cover = ">=8.0.0"
liccheck = ">=0.6"
pre-commit = ">=2.13"

[tool.poetry.scripts]
bugzilla2fedmsg = "bugzilla2fedmsg:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "S", "B", "RUF"]
ignore = ["RUF012"]

[tool.ruff.lint.isort]
lines-after-imports = 2
order-by-type = false

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "E501"]

[tool.coverage.run]
branch = true
source = ["bugzilla2fedmsg"]

[tool.coverage.paths]
source = ["bugzilla2fedmsg"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    # Don't complain if tests don't hit defensive assertion code
    "raise AssertionError",
    "raise NotImplementedError",
    "\\.\\.\\.",
]
omit = [
    "tests/*",
]
